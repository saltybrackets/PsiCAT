@namespace PsiCat.Home.Components

@using System.Timers
@using PsiCat
@using PsiCat.SmartDevices
@using YeelightAPI
@inject PsiCatClient Client
@inject SmartDevicesPlugin SmartDevices

<div>
    <span style="color: @(IsDisabled ? "#999" : "#000");">
        @(SmartDevice != null ? SmartDevice.Name : "NULL")    
    </span>
     
    <input type="checkbox" 
           @bind="@IsOn" 
           disabled="@IsDisabled"
           @onclick="Toggle"
    />
</div>

@code
{
    [Parameter]
    public SmartDevice? SmartDevice
    {
        get { return this.smartDevice; }
        set
        {
            this.smartDevice = value;
        }
    }
    
    public bool IsOn { get; private set; }
    public bool IsDisabled { get; set; } = true;
    
    private SmartDevice? smartDevice;

    private YeelightDevice? light
    {
        get { return GetLight(); }
    }
    
    private SmartLights SmartLights
    {
        get { return SmartDevices.SmartLights; }
    }


    public async Task UpdateState()
    {
        this.IsDisabled = this.light == null
                     || !this.light.IsConnected;
                                       
        
        this.IsOn = this.light != null 
               && await light.IsOn();
    }


    public async Task Toggle()
    {
        await this.light.Toggle();
        await UpdateState();
    }

    
    private YeelightDevice? GetLight()
    {
        if (SmartDevice == null)
            return null;
        
        return !this.SmartLights.Lights.ContainsKey(SmartDevice.IP) 
                   ? null 
                   : this.SmartLights.Lights[SmartDevice.IP];
    }
}
